#include <bits/stdc++.h>

/**********TYPE CASTING**********/
#define LL long long
#define L long
#define D double
#define LD long double
#define S string
#define I int
#define ULL unsigned long long
#define q queue<int>
#define vi vector<int>
#define vl vector<long>

/**********INPUT**********/
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%ld",&a)
#define s1(a) scanf("%d",&a)
#define s2(a,b) scanf("%d%d",&a,&b)
#define s3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define sll(a) scanf("%lld",&a)
#define sd(a) scanf("%lf",&a)
#define ss(a) scanf("%s",&a)
#define gc() getchar()

/**********OUTPUT**********/
#define p1(a) printf("%d\n",a)
#define p2(a,b) printf("%d %d\n",a,b)
#define pll(a) printf("%lld\n",a)
#define pd(a) printf("%.10lf\n",a)
#define pcs(a,n) printf("Case %d: %d\n",a,n)
#define nl() printf("\n")

/**********LOOP**********/
#define REV(i,e,s) for(i=e;i>=s;i--)
#define FOR(i,a,b) for(i=a;i<b;i++)
#define loop(n) for(int o=1;o<=n;o++)

/********** min/max *******/


/**********SHORTCUT**********/
#define len(a) a.length()
#define SET(a,x) memset(a,x,sizeof a)
#define VI vector<int>
#define PB push_back
#define SZ size()
#define CLR clear()
#define PB(A) push_back(A)
#define clr(a,b) memset(a,b,sizeof(a))


/**********CONSTANT**********/
#define MIN INT_MIN
#define PI 2acos(-1.0)
#define INF 10000000
#define MOD 1000000007
#define MAX 1000001
#define N 10000001



using namespace std;
int n,m,a,b,num;
int dr[]= {0, 1, 0, -1};
int dc[]= {1, 0, -1, 0};

int mat[11][11][11][11];
bool vis[11][11];
bool visited[11][11];

int solve(int x, int y, int tot)
{
    //cout<<"tot"<<" "<<x<<" "<<y<<" "<<tot<<endl;
    // if(vis[x][y])return INF;
    if(tot==m*n)
    {
        if(x==1 && y==2) return mat[x][y][x][y-1];
        if(x==2 && y==1) return mat[x][y][x-1][y];
        return INF;
    }
    int mn=INF;
    visited[x][y]=true;
    for(int i=0; i<4; i++)
    {
        int adjx=x+dr[i];
        int adjy=y+dc[i];
        if(adjx<1 || adjx>m || adjy<1 || adjy>n  || vis[adjx][adjy] || !mat[x][y][adjx][adjy]) continue;
        vis[adjx][adjy]=true;
        vis[x][y]=true;

    visited[x][y]=true;
        mn=min(mn, mat[x][y][adjx][adjy]+solve(adjx, adjy, tot+1));
        vis[adjx][adjy]=false;
        vis[x][y]=false;
    }
    return mn;
}


int main()
{
    // ios_base::sync_with_stdio(0);
    //cin.tie(0);
    // FILE * fin, * fout;
    // fin=fopen("input.txt","r");
    // fout=fopen("output.txt","w");

    int i,j,k;

    cin>>m>>n;

    for(i=1; i<=m; i++)
    {
        for(j=1; j<n; j++)
        {
            cin>>mat[i][j][i][j+1];
            mat[i][j+1][i][j]=mat[i][j][i][j+1];
        }
    }

    for(i=1; i<m; i++)
    {
        for(j=1; j<=n; j++)
        {
            cin>>mat[i][j][i+1][j];
            mat[i+1][j][i][j]=mat[i][j][i+1][j];
        }
    }

    memset(vis, false, sizeof vis);
    memset(visited, false, sizeof visited);
    int res=solve(1,1,1);
    
    for
    
    if(res>=INF)
        cout<<0<<endl;
    else
        cout<<res<<endl;

    return 0;
}

/*

2 2
1
0
1 0

*/
