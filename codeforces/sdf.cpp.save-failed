#include <bits/stdc++.h>

using namespace std;


char str[20009];

int nxt[20009];
bool can[20009];
int h, n;
int dp[20009][30];

int go(int ind, int pre)
{
    if(ind >= n) return 0;
    if(n-ind < h)
    {
        if(can[ind] && pre==(str[ind]-'a')) return 0;
        return 10000000;
    }
    int &ret = dp[ind][pre];
    if(ret+1) return ret;
    ret = 0;
//    if((str[ind]-'a') == pre) return ret = go(ind+1, pre);
    ret = go(min(nxt[ind], ind+h), str[ind]-'a')+1;
return ret;
}


int main()
{
    int i, j;
    int  w;
    int t;
    scanf("%d", &t);
    while(t--)
    {
        scanf("%d %d", &n, &h);
        scanf(" %s", str);

        memset(nxt, 0, sizeof nxt);
        memset(can, 0, sizeof can);

        nxt[n-1] = n;
        for(i = n-2; i >= 0; i--)
            nxt[i] = (str[i] == str[i+1])?nxt[i+1]:i+1;
        can[n-1] = 1;
        for(i = n-2;i >= 0; i--)
        {
            can[i] = can[i+1]&(str[i]==str[i+1]);
        }

        memset(dp, -1, sizeof dp);
        int res = go(0, 26);
        if(res >= 10000000)
        printf("-1\n");
        else
        printf("%d\n", res);
    }

return 0;
}

/*

1
5 3
abbba


*/
